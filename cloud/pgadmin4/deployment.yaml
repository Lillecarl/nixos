apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 2
  labels:
    app: pgadmin
    app.kubernetes.io/instance: pgadmin
    app.kubernetes.io/name: pgadmin
  name: pgadmin
  namespace: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: pgadmin
      app.kubernetes.io/name: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
        app.kubernetes.io/instance: pgadmin
        app.kubernetes.io/name: pgadmin
    spec:
      containers:
      - name: pgadmin4
        env:
        - name: SSL_CERT_FILE
          value: /etc/ssl/certs/ca-bundle.crt
        - name: PGADMIN_SETUP_EMAIL
          valueFrom:
            secretKeyRef:
              name: pgadmin-admin
              key: PGADMIN_SETUP_EMAIL
        - name: PGADMIN_SETUP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgadmin-admin
              key: PGADMIN_SETUP_PASSWORD
        - name: PGADMIN_PG_USERNAME
          valueFrom:
            secretKeyRef:
              name: pgadmin-db
              key: PGADMIN_PG_USERNAME
        - name: PGADMIN_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgadmin-db
              key: PGADMIN_PG_PASSWORD
        image: quay.io/spacetrain/pgadmin4:latest
        # imagePullPolicy: IfNotPresent
        imagePullPolicy: Always
        ports:
        - containerPort: 5050
          name: webui
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config-volume
          mountPath: /etc/pgadmin_custom
        # livenessProbe:
        #   httpGet:
        #     path: /login
        #     port: 5050
        #   initialDelaySeconds: 3
        #   periodSeconds: 3
        # readinessProbe:
        #   httpGet:
        #     path: /login
        #     port: 5050
        #   initialDelaySeconds: 3
        #   periodSeconds: 3
      volumes:
      - name: config-volume
        configMap:
          name: config
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
